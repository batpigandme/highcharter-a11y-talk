---
title: "Adventures with {highcharter} and the Highcharts accessibility module"
author: "Mara Averick"
date: 2022-03-09
format: 
  revealjs:
    theme: [default, custom.scss]
    preview-links: auto
    bibliography: biblio.bib
    self-contained: false
    lang: en
---

## About me 👋

::: incremental

-   Mara Averick  
-   Developer Advocate, RStudio 👩‍💻  
-   Missoula, MT 🏔️
:::

. . .

#### Things I did not create:

::: incremental
-   {highcharter} [@kunst2021]

-   Highcharts [@highcharts2021]
:::

. . .

::: {style="text-align: right; font-size: 0.85em;"}
*n.b.* The above list is not exhaustive.
:::

---

## Motivating example {.smaller .scrollable}



```{r}
#| echo: false
library(highcharter)
data <- data.frame(
    fruit = c("apple", "banana", "orange", "pear"),
    count = c(2, 3, 5, 4)
    )

highchart() %>%
  hc_add_dependency(name = "modules/accessibility.js") %>%
  hc_add_dependency(name = "modules/exporting.js") %>%
  hc_add_dependency(name = "modules/export-data.js") %>%
  hc_title(text = "Fruits") %>%
  hc_xAxis(categories = data$fruit) %>%
  hc_add_series(
    data = data$count,
    type = "column",
    name = "Count"
  ) %>%
  hc_exporting(
    enabled = TRUE,
    accessibility = list(
      enabled = TRUE
    )
  ) %>%
    hc_plotOptions(
      accessibility = list(
        enabled = TRUE,
        keyboardNavigation = list(enabled = TRUE)
    )
  )
```

---

## Pretty Code {auto-animate="true"}

-   Over 20 syntax highlighting themes available
-   Default theme optimized for accessibility

``` r
# Define a server for the Shiny app
function(input, output) {
  
  # Fill in the spot we created for a plot
  output$phonePlot <- renderPlot({
    # Render a barplot
  })
}
```

---

## Code Animations {auto-animate="true"}

-   Over 20 syntax highlighting themes available
-   Default theme optimized for accessibility

``` r
# Define a server for the Shiny app
function(input, output) {
  
  # Fill in the spot we created for a plot
  output$phonePlot <- renderPlot({
    # Render a barplot
    barplot(WorldPhones[,input$region]*1000, 
            main=input$region,
            ylab="Number of Telephones",
            xlab="Year")
  })
}
```

---

## Code

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

## References


