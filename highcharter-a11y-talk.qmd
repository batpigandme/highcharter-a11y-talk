---
title: "Adventures with {highcharter} and the Highcharts accessibility module"
author: "Mara Averick"
date: 2022-03-09
execute: 
  cache: true
format: 
  revealjs:
    theme: [default, custom.scss]
    bibliography: biblio.bib
    self-contained: false
    preview-links: auto
    lang: en
    code-fold: true
    freeze: true
    fig-align: center
---

## About me üëã

::: incremental
-   Mara Averick\
-   Developer Advocate, RStudio üë©‚Äçüíª\
-   Missoula, MT üèîÔ∏è
:::

. . .

#### Things I did not create:

::: incremental
-   {highcharter} [@kunst2021]

-   Highcharts [@highcharts2021]
:::

. . .

::: {style="text-align: right; font-size: 0.85em;"}
*n.b.* The above list is not exhaustive.
:::

------------------------------------------------------------------------

## Highcharts<sup>¬Æ</sup> JS

> Highcharts...is a pure JavaScript charting library based on SVG that makes it easy for developers to create responsive, interactive and accessible charts.

![](images/screenshot-highchartsjs-homepage-min.png){fig-alt="Screenshot of highcharts JS page, shows an example chart of distribution of icebergs." fig-align="center"}

::: footer
<https://www.highcharts.com/products/highcharts/>
:::

------------------------------------------------------------------------

## highcharter

![](images/highcharter-logo.png){.absolute top="0" right="0" width="166" height="192" fig-alt="hexagon logo for the highcharter package."}

> highcharter is an R wrapper for Highcharts JavaScript library and its modules.

![](images/screenshot-highcharter-homepage-min.png){fig-alt="Screenshot of highcharts r package homepage." fig-align="center" width="700"}

::: footer
src: Joshua Kunst <https://jkunst.com/highcharter/>
:::

------------------------------------------------------------------------

## Background / inspiration {.r-fit-text}

**Resources for Data Viz Accessibility** by Silvia Canel√≥n

> A selection of general and R-specific resources on how and why to make accessible data visualizations. [@canelon2021]

::: footer
<https://www.silviacanelon.com/blog/2021-data-viz-a11y/>
:::

::: notes
At the time of its first writing, Highcharts' accessibility module didn't seem to be working with the highcharter package.
:::

------------------------------------------------------------------------

## Motivating example {.smaller .scrollable}

[Keyboard navigation (accessibility setting) not working #707](https://github.com/jbkunst/highcharter/issues/707)

Now with working keyboard navigation! üéâ

```{r}
#| echo: false
library(highcharter)
data <- data.frame(
    fruit = c("apple", "banana", "orange", "pear"),
    count = c(2, 3, 5, 4)
    )

highchart() %>%
  hc_add_dependency(name = "modules/accessibility.js") %>%
  hc_add_dependency(name = "modules/exporting.js") %>%
  hc_add_dependency(name = "modules/export-data.js") %>%
  hc_title(text = "Fruits") %>%
  hc_xAxis(categories = data$fruit) %>%
  hc_add_series(
    data = data$count,
    type = "column",
    name = "Count"
  ) %>%
  hc_exporting(
    enabled = TRUE,
    accessibility = list(
      enabled = TRUE
    )
  ) %>%
    hc_plotOptions(
      accessibility = list(
        enabled = TRUE,
        keyboardNavigation = list(enabled = TRUE)
    )
  )
```

::: footer
Blog post: [Adventures with the Highcharts accessibility module: Part 1](https://dataand.me/posts/2021-11-10-adventures-with-the-highcharts-accessibility-module-part-1/)
:::

::: notes
This example, which I got working, came from a GitHub issue in which the user described the expected behavior (working keyboard navigation), and the fact that they weren't able to get it to work with the highcharter package.
:::

------------------------------------------------------------------------

### My journey

![](images/1-highcharter-diagram-start-finish-learning-along-the-way-min.png){fig-alt="Start point Resources for Data Viz Accessibility, Finish point five blog posts on accessibility with Highcharts and highcharter" width="1050"}

::: {.smaller-text}
**Start**: Reading Silvia's [Resources for Data Viz Accessibility](https://www.silviacanelon.com/blog/2021-data-viz-a11y/). 

**Finish**: Writing a [5-part series](https://dataand.me/#category:highcharter) on highcharter and the Highcharts accessibility module.
:::

------------------------------------------------------------------------

### My journey

![](images/2-highcharter-diagram-start-finish-learning-along-the-way-min.png){fig-alt="Start point Resources for Data Viz Accessibility, Finish point five blog posts on accessibility with Highcharts and highcharter. Annotation pointing to Finish reads: Accessible Highcharts examples created with highcharter and working R code." width="1050"}

::: {.smaller-text}
**Blog post series**: [Accessible Highcharts examples](https://www.highcharts.com/demo#accessible-charts) re-created in R using the {highcharter} package, with code and commentary!
:::

------------------------------------------------------------------------

### My journey

![](images/3-highcharter-diagram-start-finish-learning-along-the-way-min.png){fig-alt="Start point Resources for Data Viz Accessibility, Finish point five blog posts on accessibility with Highcharts and highcharter. Annotation pointing to Finish reads: Accessible Highcharts examples created with highcharter and working R code. Annotation pointing to center of line connecting start and finish reads: Me learning things along the way." width="1050"}

::: {.smaller-text}
Between the start and finish, I learned a bunch of useful (non-code or framework-specific) things about accessibility...
:::

------------------------------------------------------------------------

### My journey

![](images/4-highcharter-diagram-start-finish-learning-along-the-way-min.png){fig-alt="Start point Resources for Data Viz Accessibility, Finish point five blog posts on accessibility with Highcharts and highcharter. Annotation pointing to Finish reads: Accessible Highcharts examples created with highcharter and working R code. Annotation pointing to center of line connecting start and finish reads: Me learning things along the way.  Red line pointing to that annotation read THIS TALK." width="1050"}

::: {.r-fit-text}
**Spoiler alert**: This talk focuses on those lessons learned.
:::

::: notes
This is mainly because the code is already there for you to peruse, and also because (in a shocking twist of fate) demonstrating keyboard navigation features in a slide deck that itself uses the keyboard for navigation is less than ideal.
:::

------------------------------------------------------------------------

### Highcharts & accessibility: Product {.smaller}

:::: {.columns}

::: {.column width="60%"}

::: {.r-fit-text}
Key selling point! [@highsoftas2021]
:::

::: {.fragment}
**Features:**

* Keyboard navigation  
* Screen-reader optimization  
* Low-vision features  
* Sonification  
* Voice input  
* Tactile export

:::
:::

::: {.column width="40%"}
![](images/highcharts-a11y-white-paper-cover-min.png){fig-alt="Cover of white paper entitled Gaining competitive advantage through accessible web applications by Highsoft AS copyright 2021." fig-align="right"}
:::

::::


::: footer
<https://www.highcharts.com/accessibility/>
:::

::: notes
Highcharts is not free for commercial use, and accessibility is a key part of their business model. I'm not gonna get into numbers, but companies spend a lot of time and money to make their products accessible.

I'll focus on the first three features.
:::

------------------------------------------------------------------------

### Highcharts & accessibility: Background {.smaller}

Collaboration with Elsevier: 

* Accessibility-Expert and **User Testing**

::: {.fragment}

> ‚ÄúThis innovation allows me to interact with the chart and understand the relationships of all the components of the chart to all other components rather than just getting a description of the chart‚Äù

::: {.r-fit-text}
&mdash; [Lucy Greco](https://webaccess.berkeley.edu/about/staff-bios), Web Accessibility Evangelist, Highcharts test user (in [@bert2018])
:::

:::

::: footer
[Making charts accessible for people with visual impairments](https://www.elsevier.com/connect/making-charts-accessible-for-people-with-visual-impairments)
:::

::: notes
Collaborations with Elsevier, Georgia Institute of Technology
:::

------------------------------------------------------------------------

### Highcharts & accessibility: Background {.smaller}

√òystein Moseng (Highsoft) and Ted Gies (Elsevier) presentations at <abbr title="California State University Northridge">CSUN</abbr> Assistive Technology Conference(s)  

* Accessible SVG Charts Using <abbr title="Accessible Rich Internet Applications">ARIA</abbr> [@moseng2016]  
  - [Video interview](https://www.youtube.com/watch?v=kwCOxZ6JJ6I)
* Highcharts - The Next Chapter [@gies2019]  
* Accessible Visualizations: Maps, Annotations, and Spark lines [@gies2020]

-----------------------------------------------------------------------

### Highcharts & accessibility: Background {.smaller}

Collaboration with [Georgia Tech Sonification Lab](http://sonify.psych.gatech.edu/)
[@cantrell2021] 

* Highcharts Sonification Studio [@cantrell2021]  
  - <https://sonification.highcharts.com/>

::: footer
[New Browser-Based Chart Builder Gives Line Graphs, Scatterplots Their Very Own Audio Track](https://gvu.gatech.edu/news/new-browser-based-chart-builder-gives-line-graphs-scatterplots-their-very-own-audio-track)
:::

::: notes
Three phase user testing
:::

------------------------------------------------------------------------

### Keyboard Navigation {.smaller .scrollable}
::: {.r-stack}
::: {.fragment .fade-out}
> ...users are able to navigate and interact with the data points, chart menu, and other chart controls using the keyboard only.  
:::

::: {.fragment}
<iframe data-src="https://www.highcharts.com/samples/nonav/highcharts/accessibility/art-grants" width="900" height="640"></iframe>
:::
:::

::: footer
<https://www.highcharts.com/samples/nonav/highcharts/accessibility/art-grants>
:::

------------------------------------------------------------------------

### Access to data table {.smaller .scrollable}

User preferred this when data was simple [@moseng2016].

```{r}
suppressPackageStartupMessages(library(tidyverse))
library(highcharter)

# read in the data
url <- "https://gist.githubusercontent.com/batpigandme/aeb30566f899cdcdeb6024c0344d1ae1/raw/9cbafbbc99311c04b1a675e0ebb3953692fd51b8/pop-screenreaders.csv"
raw_dat <- read_csv(url)

# turn Category into ordered factor and remove inconsistent period
sr_dat1 <- raw_dat %>%
  mutate(Category = str_replace_all(Category, "\\.", "")) %>%
  mutate(Category = as_factor(Category))

hc_sr_setup <- highchart() %>%
  # add dependencies
  hc_add_dependency(name = "modules/series-label.js") %>%
  hc_add_dependency(name = "modules/accessibility.js") %>%
  hc_add_dependency(name = "modules/exporting.js") %>%
  hc_add_dependency(name = "modules/export-data.js") %>%
  hc_chart(
    type = "spline",
    accessibility = list(
        enabled = TRUE,
        keyboardNavigation = list(enabled = TRUE),
        linkedDescription = "Line chart demonstrating some accessibility features of Highcharts. 
      The chart displays the most commonly used screen readers in surveys taken by WebAIM from December 2010 to September 2019. 
      JAWS was the most used screen reader until 2019, when NVDA took over.
      VoiceOver is the third most used screen reader, followed by Narrator.
      ZoomText/Fusion had a surge in 2015, but usage is otherwise low.
      The overall use of other screen readers has declined drastically the past few years."
      ),
    dateTimeLabelFormats = list(
      month = list(main = "%b %Y")
    )
    ) %>%
  hc_title(text = "Most common desktop screen readers") %>%
  hc_subtitle(text = "Source: WebAIM.") %>%
  hc_caption(text = "Line chart demonstrating some accessibility features of Highcharts. The chart displays the most commonly used screen readers in surveys taken by WebAIM from December 2010 to September 2019. JAWS was the most used screen reader until 2019, when NVDA took over. VoiceOver is the third most used screen reader, followed by Narrator. ZoomText/Fusion had a surge in 2015, but usage is otherwise low. The overall use of other screen readers has declined drastically the past few years.") %>%
  hc_xAxis(categories = sr_dat1$Category,
           title = list(text = "Time"),
           accesibility = list(
             enabled = TRUE,
             description = "Time from December 2010 to September 2019",
             range = "December 2010 to September 2019"
             )
  ) %>%
  hc_yAxis(
    title = list(text = "Percentage usage"),
    accessibility = list(description = "Percentage usage")
  ) %>%
  hc_legend(symbolWidth = 40) %>%
  hc_plotOptions(
    spline = list(
      accessibility = list(
        enabled = TRUE,
        keyboardNavigation = list(enabled = TRUE)
      )
    )
  )

hc_sr_setup %>%
  hc_xAxis(categories = sr_dat1$Category,
           title = list(text = "Time"),
           accesibility = list(
             enabled = TRUE,
             description = "Time from December 2010 to September 2019",
             range = "December 2010 to September 2019"
           ),
           dateTimeLabelFormats = list(
             month = list(main = "%b %Y")
           )
  ) %>%
  hc_add_series(
    data = sr_dat1$NVDA,
    name = "NVDA",
    color = "#49a65e",
    label = list(enabled = TRUE),
    marker = list(symbol = "circle")
  ) %>%
  hc_add_series(
    data = sr_dat1$JAWS,
    name = "JAWS",
    color = "#5f98cf",
    dashStyle = "ShortDashDot",
    label = list(enabled = TRUE),
    marker = list(symbol = "diamond")
  ) %>%
  hc_add_series(
    data = sr_dat1$VoiceOver,
    name = "VoiceOver",
    color = "#434348",
    dashStyle = "ShortDot",
    label = list(enabled = TRUE),
    marker = list(symbol = "square")
  ) %>%
  hc_add_series(
    data = sr_dat1$Narrator,
    name = "Narrator",
    color = "#b381b3",
    dashStyle = "Dash",
    label = list(enabled = TRUE),
    marker = list(symbol = "triangle")
  ) %>%
  hc_add_series(
    data = sr_dat1$`ZoomText/Fusion`,
    name = "ZoomText/Fusion",
    color = "#b68c51",
    dashStyle = "ShortDot",
    label = list(enabled = TRUE),
    marker = list(symbol = "triangle-down")
  ) %>%
  hc_add_series(
    data = sr_dat1$Other,
    name = "Other", 
    color = "#f45b5b",
    dashStyle = "ShortDash",
    label = list(enabled = TRUE),
    marker = list(symbol = "circle")
  ) %>%
  hc_exporting(
    enabled = TRUE,
    accessibility = list(
      enabled = TRUE
    )
  ) %>%
  hc_tooltip(valueSuffix = "%")
```

::: footer
Blog post: [{higcharter} and the Highcharts accessibility module: Part 2](https://dataand.me/posts/2021-11-12-higcharter-and-the-highcharts-accessibility-module-part-2/)
:::

------------------------------------------------------------------------

### Sonification

<iframe data-src="https://www.highcharts.com/samples/nonav/highcharts/sonification/chart-earcon" width="95%" height="80%"></iframe>


::: footer
<https://www.highcharts.com/samples/nonav/highcharts/sonification/chart-earcon>
:::

-----------------------------------------------------------------------

### Voice input

<iframe width="1050" height="590" src="https://www.youtube-nocookie.com/embed/jGQ4HYSYUZ8" title="Accessible interaction with chart controls using Dragon voice input and Highcharts." frameborder="0" allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

------------------------------------------------------------------------

### Screen-reader accessibility {.smaller}

<iframe width="1050" height="590" src="https://www.youtube-nocookie.com/embed/w6ntxLG6MLQ" title="Highcharts A11y Line Chart" frameborder="0" allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>


::: notes
Accessible to screen readers on multiple levels (more on this later)
:::

------------------------------------------------------------------------

## Perfect?

![](images/shruggie-min.png){fig-alt="Emoticon of someone smiling and shrugging."}

------------------------------------------------------------------------

## Impressive?

![](images/emoji-100-min.png){fig-alt="100 emoji."}

::: {.fragment}
\* Or at least way better than I'd be able to do myself
:::

------------------------------------------------------------------------

### Assistive technology and the accessibility tree {.r-fit-text}

```{r}
#| label: a11y-tree
#| fig-alt: "Flow from application UI to accessibility tree to assistive technology to user."
knitr::include_graphics("images/wicg-aom-a11y-tree-min.png")
```

::: r-fit-text
Source: Accessibility Object Model Explainer [@aom_explainer_2021]
:::

::: footer
Accessibility Object Model Explainer <https://wicg.github.io/aom/explainer.html>
:::

::: notes
platform-specific accessibility APIs
:::

------------------------------------------------------------------------

### UI via assistive technology: example

```{r}
#| label: a11y-tree-example
#| fig-alt: "A full round trip from UI element to accessibility node to assistive technology to user to user keypress to accessibility API action method back to UI element."
knitr::include_graphics("images/wicg-aom-a11y-tree-example-min.png")
```

::: r-fit-text
Source: Accessibility Object Model Explainer [@aom_explainer_2021]
:::

::: footer
Accessibility Object Model Explainer <https://wicg.github.io/aom/explainer.html>
:::

::: notes
This is a difficult problem space because accessibility APIs are browser and platform specific. SVG technology stuff is cutting edge...learn more in video linked to at end from CSUN 2019
:::

## Hidden screen-reader region {visibility="hidden"}

> This second video shows a screen reader navigating to the chart in a webpage, entering the hidden information region for the chart. This is where Ted and the developers added the structure description of chart that could benefit screen reader users, such as the chart type, axis information (automatically generated), and a long description of what is found in the chart (supplied by the chart creator): [Screen reader translating hidden information about chart details](https://www.elsevier.com/__data/assets/video_file/0006/1101597/Line2-top.mp4) [@bert2018].

------------------------------------------------------------------------

## Pretty Code {auto-animate="true"}

-   Over 20 syntax highlighting themes available
-   Default theme optimized for accessibility

``` r
# Define a server for the Shiny app
function(input, output) {
  
  # Fill in the spot we created for a plot
  output$phonePlot <- renderPlot({
    # Render a barplot
  })
}
```

------------------------------------------------------------------------

## Code Animations {auto-animate="true"}

-   Over 20 syntax highlighting themes available
-   Default theme optimized for accessibility

``` r
# Define a server for the Shiny app
function(input, output) {
  
  # Fill in the spot we created for a plot
  output$phonePlot <- renderPlot({
    # Render a barplot
    barplot(WorldPhones[,input$region]*1000, 
            main=input$region,
            ylab="Number of Telephones",
            xlab="Year")
  })
}
```

------------------------------------------------------------------------

## R code and working examples {.smaller}

* [Accessible {highcharter} GitHub repo](https://github.com/batpigandme/accessible-highcharter) (rendered demos of my charts, and source `.Rmd`s)  
* Blog post series:  
  - [Adventures with the Highcharts accessibility module: Part 1](https://dataand.me/posts/2021-11-10-adventures-with-the-highcharts-accessibility-module-part-1/)  
  - [{higcharter} and the Highcharts accessibility module: Part 2](https://dataand.me/posts/2021-11-12-higcharter-and-the-highcharts-accessibility-module-part-2/)  
  - [Highcharts accessibility module with {highcharter}: Part 3](https://dataand.me/posts/2021-11-13-highcharts-accessibility-module-with-highcharter-part-3/)  
  - [Accessible {highcharter}: Part 4](https://dataand.me/posts/2021-11-15-accessible-highcharter-part-4/)  
  - [{highcharter} and the accessibility module: Part 5](https://dataand.me/posts/2021-11-16-highcharter-and-the-accessibility-module-part-5/)


------------------------------------------------------------------------

## Resources

-   [Alt-texts: The Ultimate Guide](https://axesslab.com/alt-texts/) by Daniel G√∂ransson [@goransson2017]

- 

------------------------------------------------------------------------

## References {.smaller .scrollable}
